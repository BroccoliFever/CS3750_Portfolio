{"ast":null,"code":"// import React, { useState } from \"react\";\n// import { useNavigate } from \"react-router\";\n// import { useLocation } from \"react-router-dom\";\n\n// export default function Create() {\n//   const [form, setForm] = useState({\n//     name: \"\",\n//     score: 0,\n//   });\n//   const navigate = useNavigate();\n\n//   // These methods will update the state properties.\n//   function updateForm(value) {\n//     return setForm((prev) => {\n//       return { ...prev, ...value };\n//     });\n//   }\n\n//   // This function will handle the submission.\n//   async function onSubmit(e) {\n//     e.preventDefault();\n\n//     // When a post request is sent to the create url, we'll add a new record to the database.\n//     const newPerson = { ...form };\n\n//     await fetch(\"http://localhost:5050/record\", {\n//       method: \"POST\",\n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//       },\n//       body: JSON.stringify(newPerson),\n//     }).catch((error) => {\n//       window.alert(error);\n//       return;\n//     });\n\n//     setForm({ name: \"\", score: 0 });\n//     navigate(\"/\");\n//   }\n\n//   // This following section will display the form that takes the input from the user.\n//   return (\n//     <div>\n//       <h3>Create New Highscore</h3>\n//       <form onSubmit={onSubmit}>\n//         <div className=\"form-group\">\n//           <label htmlFor=\"name\">Name</label>\n//           <input\n//             type=\"text\"\n//             className=\"form-control\"\n//             id=\"name\"\n//             value={form.name}\n//             onChange={(e) => updateForm({ name: e.target.value })}\n//           />\n//         </div>\n//         <div className=\"form-group\">\n//           <label htmlFor=\"score\">Score</label>\n//           <input\n//             type=\"number\"\n//             className=\"form-control\"\n//             id=\"score\"\n//             value={form.score}\n//             onChange={(e) => updateForm({ score: e.target.value })}\n//           />\n//         </div>\n//         <div className=\"form-group\">\n//           <input\n//             type=\"submit\"\n//             value=\"Create Highscore\"\n//             className=\"btn btn-primary\"\n//           />\n//         </div>\n//       </form>\n//     </div>\n//   );\n// }","map":{"version":3,"names":[],"sources":["/home/architect/Documents/School/Soft-3750/connectFour/app/src/components/create.js"],"sourcesContent":["// import React, { useState } from \"react\";\n// import { useNavigate } from \"react-router\";\n// import { useLocation } from \"react-router-dom\";\n\n// export default function Create() {\n//   const [form, setForm] = useState({\n//     name: \"\",\n//     score: 0,\n//   });\n//   const navigate = useNavigate();\n\n//   // These methods will update the state properties.\n//   function updateForm(value) {\n//     return setForm((prev) => {\n//       return { ...prev, ...value };\n//     });\n//   }\n\n//   // This function will handle the submission.\n//   async function onSubmit(e) {\n//     e.preventDefault();\n\n//     // When a post request is sent to the create url, we'll add a new record to the database.\n//     const newPerson = { ...form };\n\n//     await fetch(\"http://localhost:5050/record\", {\n//       method: \"POST\",\n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//       },\n//       body: JSON.stringify(newPerson),\n//     }).catch((error) => {\n//       window.alert(error);\n//       return;\n//     });\n\n//     setForm({ name: \"\", score: 0 });\n//     navigate(\"/\");\n//   }\n\n//   // This following section will display the form that takes the input from the user.\n//   return (\n//     <div>\n//       <h3>Create New Highscore</h3>\n//       <form onSubmit={onSubmit}>\n//         <div className=\"form-group\">\n//           <label htmlFor=\"name\">Name</label>\n//           <input\n//             type=\"text\"\n//             className=\"form-control\"\n//             id=\"name\"\n//             value={form.name}\n//             onChange={(e) => updateForm({ name: e.target.value })}\n//           />\n//         </div>\n//         <div className=\"form-group\">\n//           <label htmlFor=\"score\">Score</label>\n//           <input\n//             type=\"number\"\n//             className=\"form-control\"\n//             id=\"score\"\n//             value={form.score}\n//             onChange={(e) => updateForm({ score: e.target.value })}\n//           />\n//         </div>\n//         <div className=\"form-group\">\n//           <input\n//             type=\"submit\"\n//             value=\"Create Highscore\"\n//             className=\"btn btn-primary\"\n//           />\n//         </div>\n//       </form>\n//     </div>\n//   );\n// }\n"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}